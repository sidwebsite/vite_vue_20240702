@mixin utility($values, $class, $property) {
	@if type-of($values) == "list" {
		@each $value in $values {
			.#{$class}-#{$value} {
				#{$property}: $value !important;
			}
		}
	} @else if type-of($values) == "map" {
		@each $key, $value in $values {
			.#{$class}-#{$key} {
				#{$property}: $value !important;
			}
		}
	}
}
// generate-utility
@mixin generate-utility($utility, $keys, $breakpoints) {
	$maps: map-get($utility, $keys);
	@if map-get($maps, responsive) == true {
		@each $name, $value in $breakpoints {
			@if not $value {
				@include utility(map-get($maps, values), map-get($maps, class), map-get($maps, property))
			} @else {
				@media screen and (min-width: $value) {
					@if type-of(map-get($maps, values)) == "list" {
						@each $value in map-get($maps, values) {
							.#{map-get($maps, class)}-#{$name}-#{$value} {
								#{map-get($maps, property)}: $value !important;
							}
						}
					} @else if type-of(map-get($maps, values)) == "map" {
						@each $key, $value in map-get($maps, values) {
							.#{map-get($maps, class)}-#{$name}-#{$key} {
								#{map-get($maps, property)}: $value !important;
							}
						}
					}
				}
			}				
		}
	} @else {
		@include utility(map-get($maps, values), map-get($maps, class), map-get($maps, property))
	}
}

